---
title: "Thesis_Code_Cleaner"
author: "Lajos Galambos"
format: html
---



```{r}
#| echo: false
#| message: false
#| warning: false
###### National Income Accounting and Components ######
# Get the data
# install.packages("WDI")
library(WDI)
library(ggplot2)
library(dplyr)
library(reshape2)

# Download the data from the World Bank
consumption <- WDI(country = "HU", indicator = "NE.CON.TOTL.CD", start = 1991, end = 2022)
investment <- WDI(country = "HU", indicator = "NE.GDI.TOTL.CD", start = 1991, end = 2022)
gov_spending <- WDI(country = "HU", indicator = "NE.CON.GOVT.CD", start = 1991, end = 2022)
exports <- WDI(country = "HU", indicator = "BX.GSR.GNFS.CD", start = 1991, end = 2022)
imports <- WDI(country = "HU", indicator = "BM.GSR.GNFS.CD", start = 1991, end = 2022)

# Calculate net exports
net_exports <- exports
net_exports$BX.GSR.GNFS.CD <- (exports$BX.GSR.GNFS.CD - imports$BM.GSR.GNFS.CD) / 1000000000

# Scale the data by dividing by 1,000,000,000 (to convert the values to billions)
consumption$NE.CON.TOTL.CD = consumption$NE.CON.TOTL.CD / 1000000000
investment$NE.GDI.TOTL.CD = investment$NE.GDI.TOTL.CD / 1000000000
gov_spending$NE.CON.GOVT.CD = gov_spending$NE.CON.GOVT.CD / 1000000000

# Rename the columns
consumption <- dplyr::rename(consumption, Consumption = NE.CON.TOTL.CD)
investment <- dplyr::rename(investment, Investment = NE.GDI.TOTL.CD)
gov_spending <- dplyr::rename(gov_spending, GovSpending = NE.CON.GOVT.CD)
net_exports <- dplyr::rename(net_exports, NetExports = BX.GSR.GNFS.CD)

# Combine the data into a single data frame
data <- data.frame(
  year = consumption$year,
  Consumption = consumption$Consumption,
  Investment = investment$Investment,
  GovSpending = gov_spending$GovSpending,
  NetExports = net_exports$NetExports
)

# Reshape the data for plotting
data_long <- melt(data, id.vars = "year")

# Create the stacked bar chart with manually set colors
p1 = ggplot(data_long, aes(x = year, y = value, fill = variable)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = c("Consumption" = "#1b9e77", "Investment" = "#7570b3", "GovSpending" = "purple", "NetExports" = "#e7298a")) +
  labs(x = "Year", 
       y = "National Income (Billions USD)", 
       fill = "Component",
       title = "Components of Hungary's National Income") +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, size = 20), 
        legend.title = element_text(size = 14),
        legend.text = element_text(size = 12),
        axis.title.x = element_text(size = 16),
        axis.title.y = element_text(size = 16),
        axis.text.y = element_text(size = 14),
        legend.position = "bottom",
        panel.border = element_rect(colour = "black", fill=NA, size=1)) +
  scale_x_continuous(limits = range(data_long$year), expand = c(0, 0))

# Print the plot
print(p1)


# Save the plot
ggsave('HU-GNI_Components.png', plot = p1, width=10, height=7, units="in", dpi=300)
```

```{r}
#| echo: false
#| message: false
#| warning: false
###### Trade Balance ######
library(WDI)
library(ggplot2)
library(dplyr)

exports <- WDI(country = "HU", indicator = "BX.GSR.GNFS.CD", start = 1982, end = 2022)
imports <- WDI(country = "HU", indicator = "BM.GSR.GNFS.CD", start = 1982, end = 2022)

# Convert the 'year' column to date format
exports$year = as.Date(paste(exports$year, 1, 1, sep = "-"), format = "%Y-%m-%d")
imports$year = as.Date(paste(imports$year, 1, 1, sep = "-"), format = "%Y-%m-%d")

# Combine exports and imports data
d = as.data.frame(exports[, c('year', 'BX.GSR.GNFS.CD')])
d = cbind(d, imports[, 'BM.GSR.GNFS.CD'])

# Change column names
names(d) = c('year', 'Exports', 'Imports')

d$Exports = d$Exports / 1000000000
d$Imports = d$Imports / 1000000000 * -1  # Multiply by -1 to represent as negative cash flow

# Calculate the balance
d$Balance = d$Exports + d$Imports

# Create the plot
p1 = ggplot(d, aes(x = year)) +
  geom_line(aes(y = Exports, color = "Exports"), size = 0.7) +
  geom_point(aes(y = Exports, color = "Exports"), shape = 18, size = 2) +
  geom_line(aes(y = Imports, color = "Imports"), size = 0.7) +
  geom_point(aes(y = Imports, color = "Imports"), shape = 17, size = 2) +
  geom_line(aes(y = Balance, color = "Trade Balance"), size = 0.7) +
  geom_point(aes(y = Balance, color = "Trade Balance"), shape = 16, size = 2) +
  geom_hline(yintercept = 0, color = "black") +
  labs(x = "Year", 
       y = "Billions USD", 
       title = "Hunngary's Exports, Imports and Trade Balance",
       color = "Indicator") +
  scale_color_manual(values = c("Exports" = "#1b9e77", "Imports" = "purple", "Trade Balance" = "#7570b3")) +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, size = 20), 
        legend.title = element_text(size = 14),
        legend.text = element_text(size = 12),
        axis.title.x = element_text(size = 16),
        axis.title.y = element_text(size = 16),
        axis.text.y = element_text(size = 14),
        legend.position = "bottom",
        panel.border = element_rect(colour = "black", fill=NA, size=1)) +
  scale_x_date(limits = range(d$year), expand = c(0, 0))

p_trade = p1
p_trade

ggsave('HU-Trade_ExportsImportsBalance.png', plot = p_trade, width=10, height=7, units="in", dpi=300)
```

```{r}
#| echo: false
#| message: false
#| warning: false
###### Hungary's Net Foreign Assets vs Current Account ######
# Download the data
net_foreign_assets <- WDI(country = "HU", indicator = "FM.AST.NFRG.CN", start = 1982, end = 2022)
current_account_balance <- WDI(country = "HU", indicator = "BN.CAB.XOKA.CD", start = 1982, end = 2022)
exchange_rate <- WDI(country = "HU", indicator = "PA.NUS.FCRF", start = 1982, end = 2022)

# Convert the 'year' column to date format
net_foreign_assets$year = as.Date(paste(net_foreign_assets$year, 1, 1, sep = "-"), format = "%Y-%m-%d")
current_account_balance$year = as.Date(paste(current_account_balance$year, 1, 1, sep = "-"), format = "%Y-%m-%d")
exchange_rate$year = as.Date(paste(exchange_rate$year, 1, 1, sep = "-"), format = "%Y-%m-%d")

# Combine the data
d = as.data.frame(net_foreign_assets[, c('year', 'FM.AST.NFRG.CN')])
d = cbind(d, current_account_balance[, 'BN.CAB.XOKA.CD'])
d = cbind(d, exchange_rate[, 'PA.NUS.FCRF'])

# Change column names
names(d) = c('year', 'NetForeignAssets', 'CurrentAccountBalance', 'ExchangeRate')

# Convert net foreign assets to USD and scale the values
d$NetForeignAssets = (d$NetForeignAssets / d$ExchangeRate) / 1000000000
d$CurrentAccountBalance = d$CurrentAccountBalance / 1000000000

# Create the plot
p1 = ggplot(d, aes(x = year)) +
  geom_line(aes(y = NetForeignAssets, color = "Net Foreign Assets"), size = 0.7) +
  geom_point(aes(y = NetForeignAssets, color = "Net Foreign Assets"), shape = 18, size = 2) +
  geom_line(aes(y = CurrentAccountBalance, color = "Current Account Balance"), size = 0.7) +
  geom_point(aes(y = CurrentAccountBalance, color = "Current Account Balance"), shape = 17, size = 2) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") +  # Add a horizontal dashed line at y = 0
  labs(x = "Year", 
       y = "Billions USD", 
       title = "Hungary's Net Foreign Assets and Current Account Balance",
       color = "Indicator") +
  scale_color_manual(values = c("Net Foreign Assets" = "#1b9e77", "Current Account Balance" = "#7570b3")) +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, size = 20), 
        legend.title = element_text(size = 14),
        legend.text = element_text(size = 12),
        axis.title.x = element_text(size = 16),
        axis.title.y = element_text(size = 16),
        axis.text.y = element_text(size = 14),
        legend.position = "bottom",
        panel.border = element_rect(colour = "black", fill=NA, size=1)) +
  scale_x_date(limits = range(d$year), expand = c(0, 0))

p1

# Save the plot
ggsave('HU-NetForeignAssets_CurrentAccountBalance.png', plot = p1, width=10, height=7, units="in", dpi=300)
```





```{r}
#| echo: false
#| message: false
#| warning: false
###### Current Account, Financial and Capital Accounts of Hungary ######
library(gridExtra)

# Get the data
BCA <- WDI(country = "HU", indicator = "BN.CAB.XOKA.CD", start = 1982, end = 2022)
BFA <- WDI(country = "HU", indicator = "BN.FIN.TOTL.CD", start = 1982, end = 2022)
BKA <- WDI(country = "HU", indicator = "BN.TRF.KOGT.CD", start = 1982, end = 2022)
BET <- WDI(country = "HU", indicator = "BN.KAC.EOMS.CD", start = 1982, end = 2022)
RES <- WDI(country = "HU", indicator = "BN.RES.INCL.CD", start = 1982, end = 2022)

# Convert the 'year' column to date format
BCA$year = as.Date(paste(BCA$year, 1, 1, sep = "-"), format = "%Y-%m-%d")
BFA$year = as.Date(paste(BFA$year, 1, 1, sep = "-"), format = "%Y-%m-%d")
BKA$year = as.Date(paste(BKA$year, 1, 1, sep = "-"), format = "%Y-%m-%d")  
BET$year = as.Date(paste(BET$year, 1, 1, sep = "-"), format = "%Y-%m-%d")
RES$year = as.Date(paste(RES$year, 1, 1, sep = "-"), format = "%Y-%m-%d")

# Combine all data together
d = merge(BCA[, c('year', 'BN.CAB.XOKA.CD')], BFA[, c('year', 'BN.FIN.TOTL.CD')], by = 'year')
d = merge(d, BKA[, c('year', 'BN.TRF.KOGT.CD')], by = 'year')
d = merge(d, BET[, c('year', 'BN.KAC.EOMS.CD')], by = 'year')
d = merge(d, RES[, c('year', 'BN.RES.INCL.CD')], by = 'year')

# Change column names
names(d) = c('year', 'BCA', 'BFA', 'BKA', 'BET', 'RES')

# Scale the data
d$BCA = d$BCA / 1000000000
d$BFA = d$BFA / 1000000000
d$BKA = d$BKA / 1000000000
d$BET = d$BET / 1000000000
d$RES = d$RES / 1000000000

# Sign has to be adjusted for Financial Account
d$BFA = d$BFA * -1

# Update the plot
p1 = ggplot(d, aes(x = year)) +
  geom_line(aes(y = BCA, color = "Current Account"), size = 1.2) +
  geom_point(aes(y = BCA, color = "Current Account"), shape = 18, size = 2.5) +
  geom_line(aes(y = BFA, color = "Financial Account"), size = 1.2) +
  geom_point(aes(y = BFA, color = "Financial Account"), shape = 17, size = 2.5) +
  geom_line(aes(y = BKA, color = "Capital Account"), size = 1.2) +
  geom_point(aes(y = BKA, color = "Capital Account"), shape = 16, size = 2.5) +
  geom_line(aes(y = BET, color = "Statistical Discrepancy"), linetype = "dashed", size = 0.5) +
  geom_hline(yintercept = 0, color = "black") +
  labs(x = "Year", 
       y = "Billions USD", 
       title = "Balance on Hungary's Current, Financial, and Capital Accounts",
       color = "Indicator") +
  scale_color_manual(values = c("Current Account" = "#1b9e77", "Financial Account" = "purple", "Capital Account" = "#7570b3", "Statistical Discrepancy" = "black")) +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, size = 20), 
        legend.title = element_text(size = 14),
        legend.text = element_text(size = 12),
        axis.title.x = element_text(size = 16),
        axis.title.y = element_text(size = 16),
        axis.text.y = element_text(size = 14),
        legend.position = "bottom",
        panel.border = element_rect(colour = "black", fill=NA, size=1)) +
  scale_x_date(limits = range(d$year), expand = c(0, 0))

p_bop = p1
p_bop

ggsave('HU-BOP_CAandFAandCA.png', plot = p_bop, width=10, height=7, units="in", dpi=300)
```

```{r}
#| echo: false
#| message: false
#| warning: false
###### Exchange Rate vs Official Reserves ######
# Exchange Rate Data
library(tidyquant)

# Get the data
usdhuf <- tq_get(c("CCUSMA02HUM618N"),
                 get = "economic.data",
                 from = "1982-01-01",
                 to = "2022-12-31")

p1 = ggplot(usdhuf, aes(x = date, y = price, color = "Hungarian Forint against the US Dollar")) +
  geom_line(size = 1.2) +
  geom_hline(yintercept = 0, color = "black") +
  labs(x = "Year", 
       y = "USD/HUF (Nominal)", 
       title = "Nominal Exchange Rate",
       color = "Indicator") +
  scale_color_manual(values = c("Hungarian Forint against the US Dollar" = "#1b9e77")) +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, size = 20), 
        legend.title = element_text(size = 14),
        legend.text = element_text(size = 12),
        axis.title.x = element_text(size = 16),
        axis.title.y = element_text(size = 16),
        axis.text.y = element_text(size = 14),
        legend.position = "bottom",
        panel.border = element_rect(colour = "black", fill=NA, size=1)) +
  scale_x_date(limits = range(usdhuf$date), expand = c(0, 0))

p_usdhuf = p1

# Reserves Data
library(WDI)
library(ggplot2)
library(gridExtra)

official_reserves <- WDI(country = "HU", indicator = "FI.RES.TOTL.CD", start = 1982, end = 2022)

# Convert the 'year' column to date format
official_reserves$year = as.Date(paste(official_reserves$year, 1, 1, sep = "-"), format = "%Y-%m-%d")

# Convert to billions
official_reserves$FI.RES.TOTL.CD = official_reserves$FI.RES.TOTL.CD / 1000000000

# Create a plot for the Official Reserves Account
p2 = ggplot(official_reserves, aes(x = year, y = FI.RES.TOTL.CD, color = "Official Reserves")) +
  geom_line(size = 1.2) +
  geom_point(shape = 17, size = 3) +
  geom_hline(yintercept = 0, color = "black") +
  labs(x = "Year", 
       y = "Billions USD", 
       title = "Hungary Official Reserves Account",
       color = "Indicator") +
  scale_color_manual(values = c("Official Reserves" = "#7570b3")) +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, size = 20), 
        legend.title = element_text(size = 14),
        legend.text = element_text(size = 12),
        axis.title.x = element_text(size = 16),
        axis.title.y = element_text(size = 16),
        axis.text.y = element_text(size = 14),
        legend.position = "bottom",
        panel.border = element_rect(colour = "black", fill=NA, size=1)) +
  scale_x_date(limits = range(official_reserves$year), expand = c(0, 0))

p_BRA = p2

# Comparison
p_comparison = grid.arrange(p_usdhuf, p_BRA, nrow = 1)

ggsave('ExchRate_vs_Reserves.png', plot = p_comparison, width=11, height=8, units="in", dpi=300)
```





